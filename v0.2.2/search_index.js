var documenterSearchIndex = {"docs":
[{"location":"man/guide/#Guide-1","page":"Guide","title":"Guide","text":"","category":"section"},{"location":"man/guide/#Installation-1","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"man/guide/#nkf-1","page":"Guide","title":"nkf","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"NKFtool requires nkf to be installed in your system. Major Unix-like operating systems offer its precompiled version in their package management systems.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"For MacOSX, nkf can be installed with Homebrew:","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"brew install nkf","category":"page"},{"location":"man/guide/#NKFtool-1","page":"Guide","title":"NKFtool","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"NKFtool also requires Julia v1.0 or above.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"To install NKFtool using Julia's packaging system, enter Julia's package manager prompt with ], and run","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"    (v1.1) pkg> add NKFtool","category":"page"},{"location":"man/guide/#Overview-1","page":"Guide","title":"Overview","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"(Image: NKF-outline)","category":"page"},{"location":"man/guide/#Convert-a-string-1","page":"Guide","title":"Convert a string","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The nkf command can guess the encoding of Japanese texts.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"To guess the encoding of a string from, use nkf_guess(from::String)","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"julia> nkf_guess(raw\"こんにちわ\")\n\"UTF-8\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-j\") |> nkf_guess\n\"ISO-2022-JP\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-e\") |> nkf_guess\n\"EUC-JP\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-s\") |> nkf_guess\n\"Shift_JIS\"","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"To convert the encoding of a string from, use nkf_convert(from::String, options=\"-w -m0\").","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The second parameter options is passed to the nkf command to specify its action.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The default of options is -w -m0 (output encoding is UTF-8, no MIME decode), which keeps the encoding of Julia's standard strings, i.e., UTF-8.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"julia> nkf_convert(raw\"こんにちわ\")\n\"こんにちわ\"\n\njulia> nkf_convert(raw\"こんにちわ\", \"-w -m0\")\n\"こんにちわ\"","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"To convert the encoding, the output encoding option, only one of -j (ISO-2022-JP), -s (Shift_JIS), -e (EUC-JP) and -w (UTF-8), should be specified. The input encoding option, only one of -J, -S, -E and -W, may be specified if you know the encoding of the input string from.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"Because in Julia strings in the encoding other than UTF-8 are not printable , it is a good practice to encode them to printable characters with e.g. Base64.base64encode(), as follows:","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"julia> using Base64\n\njulia> nkf_convert( raw\"こんにちわ\", \"-j\") |> base64encode\n\"GyRCJDMkcyRLJEEkbxsoQg==\"\n\njulia> String(base64decode(ans)) |> nkf_convert\n\"こんにちわ\"","category":"page"},{"location":"man/guide/#Convert-a-text-stream-1","page":"Guide","title":"Convert a text stream","text":"","category":"section"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"nkf_guess function accepts input text stream for the first argument.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"nkf_convert function also accepts input text stream for the first argument, which returns the output text stream.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"See the following code using nkf_guess(from::IO) to guess the encoding of a text file.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"julia> open(\"hello_sjis.txt\",\"w\") do f\n           print(f, nkf_convert(raw\"こんにちわ\", \"-s\"))\n       end\n       #\n       encoding=open(\"hello_sjis.txt\") do f\n           nkf_guess(f)  # <==\n       end\n\"Shift_JIS\"","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"The following code using nkf_convert(from::IO, options=\"-w -m0\") is to convert a text file from Shift_JIS encoding to UTF-8 encoding and to read it as Julia's string.","category":"page"},{"location":"man/guide/#","page":"Guide","title":"Guide","text":"julia> hello_utf=open(\"hello_sjis.txt\") do f\n           nkf_convert(f, \"-w -m0\")  # <==\n       end\n\"こんにちわ\"","category":"page"},{"location":"lib/public/#Public-Documentation-1","page":"Public","title":"Public Documentation","text":"","category":"section"},{"location":"lib/public/#","page":"Public","title":"Public","text":"NKFtool.NKFtool","category":"page"},{"location":"lib/public/#","page":"Public","title":"Public","text":"Julia package to guess and convert encodings of Japanese characters. This is a wrapper to Network kanji filter, aka nkf, and provides the interface to use nkf command installed in your system from Julia.","category":"page"},{"location":"lib/public/#","page":"Public","title":"Public","text":"NKFtool requires nkf to be installed in your system. Major Unix-like operating systems offer its precompiled version in their package management systems.","category":"page"},{"location":"lib/public/#NKF-information-1","page":"Public","title":"NKF information","text":"","category":"section"},{"location":"lib/public/#","page":"Public","title":"Public","text":"NKFtool.nkf_version()\nNKFtool.nkf_help()","category":"page"},{"location":"lib/public/#NKFtool.nkf_version-Tuple{}","page":"Public","title":"NKFtool.nkf_version","text":"nkf_version()\n\nPrint the version message of nkf command. The same as the output of nkf --version command.\n\nExamples\n\njulia> nkf_version() |> print\nNetwork Kanji Filter Version 2.1.5 (2018-12-15)\nCopyright (C) 1987, FUJITSU LTD. (I.Ichikawa).\nCopyright (C) 1996-2018, The nkf Project.\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#NKFtool.nkf_help-Tuple{}","page":"Public","title":"NKFtool.nkf_help","text":"nkf_help()\n\nPrint the help message of nkf command. The same as the output of nkf --help command.\n\nExamples\n\njulia> nkf_help() |> print\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Guess-an-encoding-1","page":"Public","title":"Guess an encoding","text":"","category":"section"},{"location":"lib/public/#","page":"Public","title":"Public","text":"NKFtool.nkf_guess(from::String)\nNKFtool.nkf_guess(from::IO)","category":"page"},{"location":"lib/public/#NKFtool.nkf_guess-Tuple{String}","page":"Public","title":"NKFtool.nkf_guess","text":"nkf_guess(from::String)\n\nTry to guess the encoding of the input text from, and return a string representing its encoding, which is just the result of the command line echo <from> | nkf -g.\n\nExamples\n\njulia> nkf_guess(raw\"こんにちわ\")\n\"UTF-8\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-j\") |> nkf_guess\n\"ISO-2022-JP\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-e\") |> nkf_guess\n\"EUC-JP\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-s\") |> nkf_guess\n\"Shift_JIS\"\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#NKFtool.nkf_guess-Tuple{IO}","page":"Public","title":"NKFtool.nkf_guess","text":"nkf_guess(from::IO)\n\nTry to guess the encoding of the input stream from, and return a string representing its encoding.\n\nExamples\n\njulia> nkf_guess(IOBuffer(raw\"こんにちわ\"))\n\"UTF-8\"\n\njulia> open(\"hello_sjis.txt\",\"w\") do f\n           print(f, nkf_convert(raw\"こんにちわ\", \"-s\"))\n       end\n       #\n       encoding=open(\"hello_sjis.txt\") do f\n           nkf_guess(f)\n       end\n\"Shift_JIS\"\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Convert-an-encoding-1","page":"Public","title":"Convert an encoding","text":"","category":"section"},{"location":"lib/public/#","page":"Public","title":"Public","text":"nkf_convert(from::String, options=\"-w m0\")\nnkf_convert(from::IO, options=\"-w -m0\")","category":"page"},{"location":"lib/public/#NKFtool.nkf_convert","page":"Public","title":"NKFtool.nkf_convert","text":"nkf_convert(from::String, options=\"-w -m0\")\n\nConvert the input string from to the encoding specified by the option directive options, and return the output text stream, which is just the result of the command line echo <from> | nkf <options>.\n\nArguments\n\nfrom::String: the input string\noptions::String: the option directive to be passed to nkf command.\nOutput encoding\n-j : ISO-2022-JP\n-s : Shift_JIS\n-e : EUC-JP\n-w[8[0],{16,32}[{B,L}[0]]] : UTF with options\nInput encoding\n-J : ISO-2022-JP\n-S : Shift_JIS\n-E : EUC-JP\n-W[8,[16,32][B,L]] : UTF with option\nMIME decode : -m[BQSN0]\nB:base64\nQ:quoted\nS:strict\nN:nonstrict\n0:no decode\nMIME encode : -M[BQ]\nB:base64\nQ:quoted\n\nExamples\n\njulia> nkf_convert(raw\"こんにちわ\", \"-w -m0\")\n\"こんにちわ\"\n\njulia> using Base64\n\njulia> nkf_convert( raw\"こんにちわ\", \"-j\") |> base64encode\n\"GyRCJDMkcyRLJEEkbxsoQg==\"\n\njulia> String(base64decode(ans)) |> nkf_convert\n\"こんにちわ\"\n\n\n\n\n\n","category":"function"},{"location":"lib/public/#NKFtool.nkf_convert","page":"Public","title":"NKFtool.nkf_convert","text":"nkf_convert(from::IO, options=\"-w -m0\")\n\nConvert the input stream from to the encoding specified by the option directive options, and return the output text stream, which is just the result of the command line cat <from> | nkf <options>\n\nArguments\n\ntext::String: the input string\noptions::String: the directibr to be passed to nkf command. See nkf_convert(from::String, options=\"-w -m0\")\n\nExamples\n\njulia> open(\"hello_sjis.txt\",\"w\") do f\n           print(f, nkf_convert(raw\"こんにちわ\", \"-s\"))\n       end\n       #\n       hello_utf=open(\"hello_sjis.txt\") do f\n           nkf_convert(f, \"-w -m0\")\n       end\n\"こんにちわ\"\n\n\n\n\n\n","category":"function"},{"location":"#NKFtool.jl-1","page":"Home","title":"NKFtool.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Documentation for NKFtool.jl","category":"page"},{"location":"#Package-Features-1","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Use nkf command in your Julia program\nConversion of the encoding supported with the nkf command\nAutomatic detection of the encoding of the input text\nSource text from either string or stream","category":"page"},{"location":"#Manual-Outline-1","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages=[\"man/guide.md\"]\nDepth=2","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Pages=[\"man/guideja.md\"]\nDepth=2","category":"page"},{"location":"#Library-Outline-1","page":"Home","title":"Library Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages=[\"lib/public.md\"]\nDepth=2","category":"page"},{"location":"#Index-1","page":"Home","title":"Index","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages=[\"lib/public.md\"]","category":"page"},{"location":"man/guideja/#利用ガイド-1","page":"手引き","title":"利用ガイド","text":"","category":"section"},{"location":"man/guideja/#インストール-1","page":"手引き","title":"インストール","text":"","category":"section"},{"location":"man/guideja/#nkf-1","page":"手引き","title":"nkf","text":"","category":"section"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"NKFtool を使うシステムには、nkf コマンドがインストール済でなければなりません。 Unix 類似のオペレーティングシステム（OS）の多くでは、 OS付属のパッケージマネージメントシステムからインストールできます。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"MacOSX では、Homebrew を用いてインストールできます。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"brew install nkf","category":"page"},{"location":"man/guideja/#NKFtool-1","page":"手引き","title":"NKFtool","text":"","category":"section"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"NKFtoolは、Julia 1.0 以上が必要です。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"Julia のパッケージ・マネージメントシステムを用いて nkf をインストールするには、 ] を打鍵しパッケージマネージメントを起動してから、以下を実行します。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"    (v1.1) pkg> add NKFtool","category":"page"},{"location":"man/guideja/#概観-1","page":"手引き","title":"概観","text":"","category":"section"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"(Image: NKF-outline)","category":"page"},{"location":"man/guideja/#文字列のエンコードを変換する-1","page":"手引き","title":"文字列のエンコードを変換する","text":"","category":"section"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"nkf コマンドは、日本語テキストのエンコードを推定できます。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"文字列 from のエンコードを推定するには nkf_guess(from::String) を使います。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"julia> nkf_guess(raw\"こんにちわ\")\n\"UTF-8\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-j\") |> nkf_guess\n\"ISO-2022-JP\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-e\") |> nkf_guess\n\"EUC-JP\"\n\njulia> nkf_convert( raw\"こんにちわ\", \"-s\") |> nkf_guess\n\"Shift_JIS\"","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"文字列 from のエンコードを変換するには nkf_convert(from::String, options=\"-w -m0\") を使います。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"２つ目の引数 options は nkf コマンドに渡され、変換方法を指定します。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"引数 options の既定値は -w -m0 (出力エンコード UTF-8, no MIME デコードなし) です。 これは、Julia の標準文字列のエンコード（UTF-8）を維持することを意味します。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"julia> nkf_convert(raw\"こんにちわ\")\n\"こんにちわ\"\n\njulia> nkf_convert(raw\"こんにちわ\", \"-w -m0\")\n\"こんにちわ\"","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"エンコードを変換するには、出力エンコーディングのオプションを一つだけ指定します。 すなわち、-j (ISO-2022-JP), -s (Shift_JIS), -e (EUC-JP), または -w (UTF-8) のどれかです。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"入力文字列のエンコードが分かっている場合には、 入力エンコーディングのオプションを一つだけ指定してもよいです。 すなわち、 -J, -S, -E, または -W のどれかです。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"Julia では、UTF-8 以外でエンコードされた文字列は印字可能ではありません。 これらを印字可能な文字列に変換するのが便利でしょう。 例えば、以下のように Base64.base64encode() を使います。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"julia> using Base64\n\njulia> nkf_convert( raw\"こんにちわ\", \"-j\") |> base64encode\n\"GyRCJDMkcyRLJEEkbxsoQg==\"\n\njulia> String(base64decode(ans)) |> nkf_convert\n\"こんにちわ\"","category":"page"},{"location":"man/guideja/#テキストストリームを変換する-1","page":"手引き","title":"テキストストリームを変換する","text":"","category":"section"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"nkf_guess は、第１引数としてテキストの入力ストリームも受け取ります。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"nkf_convert も、第１引数としてテキストの入力ストリームを受け取ります。 この場合の返り値は、テキストの出力ストリームです。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"例えば、テキストファイルのエンコードを推定するには、 以下のように、 nkf_guess(from::IO) を使います。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"julia> open(\"hello_sjis.txt\",\"w\") do f\n           print(f, nkf_convert(raw\"こんにちわ\", \"-s\"))\n       end\n       #\n       encoding=open(\"hello_sjis.txt\") do f\n           nkf_guess(f)\n       end\n\"Shift_JIS\"","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"Shift_JIS エンコーディングされたテキストファイルを UTF-8 に変換して、Julia の文字列として読み込むには、 以下のように、 nkf_convert(from::IO, options=\"-w -m0\")  を使います。","category":"page"},{"location":"man/guideja/#","page":"手引き","title":"手引き","text":"julia> hello_utf=open(\"hello_sjis.txt\") do f\n           nkf_convert(f, \"-w -m0\")\n       end\n\"こんにちわ\"","category":"page"}]
}
